package hash;

import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;


public class uniquepairs {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int[]nums = {1,7,5,12,9,3};  //(1,3) ( 7,5) (9,7) (5,3)
		var pairs = pairs(nums,2);
		System.out.print(pairs);

	}

	private static int  pairs(int[] nums,int k) {
	HashSet<Integer>hs = new HashSet<Integer>();
	 int count =0;
	for(int i =0;i<nums.length;i++)
	{
		hs.add(nums[i]); 
		 // 1 ,-1
		  // 7.5
		// 12,10
		//9,7
		//3,1
		
		
		// 1,7,5,12,9.3
	}                                 // N 5 3 N 7 1
	
 for(int i =0;i<nums.length;i++)
	{
  int target = nums[i]-k;
		if (hs.contains(nums[i]-k)); // -1 no count =0;                                 // 5  yes count =                           //  3  yes count = 2                                // 1
		{
			count++;
		}
		if (hs.contains(nums[i]+k)); // -1 no count =0;                                 // 5  yes count =                           //  3  yes count = 2                                // 1
		{
			count++;
		}
		
		hs.remove(nums[i]);	
	}
	
	return  count;
	}
		
		
	}



