package hash;


import java.util.HashSet;
import java.util.Set;


public class uniquepairs {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int[]nums = {1,7,5,12,9,3};  //(1,3) ( 7,5) (9,7) (5,3)
		var pairs = pairs(nums,2);
		System.out.print(pairs);

	}

	private static int  pairs(int[] nums,int k) {
		Set<Integer> set = new HashSet<>();
        for (var number : nums)
            set.add(number);

        // Now, we iterate over the array of numbers one more time,
        // and for each number check to see if we have (a + diff) or
        // (a - diff) in our set.
        //
        // Once we're done, we should remove this number from our set
        // so we don't double count it.
        var count = 0;
        for (var number : nums) {
            if (set.contains(number + k))
                count++;
            if (set.contains(number - k))
                count++;
            set.remove(number);
        }

        // Time complexity of this method is O(n).

        return count;
    }
		
		
	}



